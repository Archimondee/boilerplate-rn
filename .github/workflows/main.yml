# This is a basic workflow to help you get started with Actions

name: Build Android APK

# Controls when the workflow will run
on:
  push:
    tags:
      - "v*.*.*"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Download Java SDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "zulu" # See 'Supported distributions' for available options
          java-version: "11.0.4"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # Runs a single command using the runners shell
      - name: Install npm dependencies
        run: yarn

      #- name: Clean android build
      #run: cd android && ./gradlew clean && cd ..

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android Release Dev
        run: cd android && ENVFILE=.env.development && ./gradlew assembleRelease

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: BoilerPlate
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Release github
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: android/app/build/outputs/apk/release/app-release.apk
      
      - name: Archive files
        run: |
          sudo apt-get update
          sudo apt-get install zip
          cd android/app/build/outputs/apk/release
          zip -r archive.zip . -i app-release.apk

      - name: Upload to gdrive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.CREDENTIALS }}
          filename: "archive.zip"
          folderId: ${{ secrets.FOLDERID }}
