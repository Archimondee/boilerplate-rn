[{"/Volumes/SSD/Boilerplate/boilerplate/.eslintrc.js":"1","/Volumes/SSD/Boilerplate/boilerplate/App.tsx":"2","/Volumes/SSD/Boilerplate/boilerplate/__tests__/App-test.tsx":"3","/Volumes/SSD/Boilerplate/boilerplate/babel.config.js":"4","/Volumes/SSD/Boilerplate/boilerplate/index.js":"5","/Volumes/SSD/Boilerplate/boilerplate/metro.config.js":"6","/Volumes/SSD/Boilerplate/boilerplate/react-native.config.js":"7","/Volumes/SSD/Boilerplate/boilerplate/src/components/Button/ButtonExample.tsx":"8","/Volumes/SSD/Boilerplate/boilerplate/src/components/Button/ButtonExampleStyles.ts":"9","/Volumes/SSD/Boilerplate/boilerplate/src/navigations/AppNavigator.tsx":"10","/Volumes/SSD/Boilerplate/boilerplate/src/navigations/MainNavigator.tsx":"11","/Volumes/SSD/Boilerplate/boilerplate/src/screens/LoginScreen/LoginScreen.tsx":"12","/Volumes/SSD/Boilerplate/boilerplate/src/screens/LoginScreen/LoginScreenStyles.ts":"13","/Volumes/SSD/Boilerplate/boilerplate/src/screens/RegisterScreen/RegisterScreen.tsx":"14","/Volumes/SSD/Boilerplate/boilerplate/src/screens/RegisterScreen/RegisterScreenStyles.ts":"15","/Volumes/SSD/Boilerplate/boilerplate/src/types/NavigatorTypes.ts":"16","/Volumes/SSD/Boilerplate/boilerplate/src/utils/NavigationService.ts":"17","/Volumes/SSD/Boilerplate/boilerplate/src/store/index.ts":"18","/Volumes/SSD/Boilerplate/boilerplate/src/store/user/actions.ts":"19","/Volumes/SSD/Boilerplate/boilerplate/src/store/user/reducers.ts":"20","/Volumes/SSD/Boilerplate/boilerplate/src/store/user/types.ts":"21","/Volumes/SSD/Boilerplate/boilerplate/src/configs/api.ts":"22","/Volumes/SSD/Boilerplate/boilerplate/src/configs/colors.ts":"23","/Volumes/SSD/Boilerplate/boilerplate/src/configs/fonts.ts":"24","/Volumes/SSD/Boilerplate/boilerplate/src/configs/icons.ts":"25","/Volumes/SSD/Boilerplate/boilerplate/src/configs/images.ts":"26","/Volumes/SSD/Boilerplate/boilerplate/src/hooks/index.ts":"27","/Volumes/SSD/Boilerplate/boilerplate/src/types/TestTypes.ts":"28","/Volumes/SSD/Boilerplate/boilerplate/src/utils/Dispatch.ts":"29","/Volumes/SSD/Boilerplate/boilerplate/src/utils/AsyncStorageService.ts":"30","/Volumes/SSD/Boilerplate/boilerplate/src/utils/validations/ValidationDictionary.ts":"31","/Volumes/SSD/Boilerplate/boilerplate/src/utils/validations/ValidationService.ts":"32","/Volumes/SSD/Boilerplate/boilerplate/src/assets/skeleton/ExampleSkeleton.tsx":"33","/Volumes/SSD/Boilerplate/boilerplate/src/i18n/index.ts":"34"},{"size":2123,"mtime":1652898291000,"results":"35","hashOfConfig":"36"},{"size":423,"mtime":1652978527000,"results":"37","hashOfConfig":"36"},{"size":267,"mtime":1652702891000,"results":"38","hashOfConfig":"36"},{"size":579,"mtime":1653066795000,"results":"39","hashOfConfig":"36"},{"size":227,"mtime":1652858233000,"results":"40","hashOfConfig":"36"},{"size":299,"mtime":1652691227000,"results":"41","hashOfConfig":"36"},{"size":104,"mtime":1652702891000,"results":"42","hashOfConfig":"36"},{"size":498,"mtime":1652858685000,"results":"43","hashOfConfig":"36"},{"size":123,"mtime":1652788878000,"results":"44","hashOfConfig":"36"},{"size":3732,"mtime":1654072701000,"results":"45","hashOfConfig":"36"},{"size":1752,"mtime":1652858653000,"results":"46","hashOfConfig":"36"},{"size":1841,"mtime":1654073934000,"results":"47","hashOfConfig":"36"},{"size":196,"mtime":1652858012000,"results":"48","hashOfConfig":"36"},{"size":2968,"mtime":1653228373000,"results":"49","hashOfConfig":"36"},{"size":211,"mtime":1653226349000,"results":"50","hashOfConfig":"36"},{"size":179,"mtime":1652858333000,"results":"51","hashOfConfig":"36"},{"size":1201,"mtime":1652897511000,"results":"52","hashOfConfig":"36"},{"size":769,"mtime":1652978666000,"results":"53","hashOfConfig":"36"},{"size":984,"mtime":1653070487000,"results":"54","hashOfConfig":"36"},{"size":561,"mtime":1653070366000,"results":"55","hashOfConfig":"36"},{"size":598,"mtime":1653067655000,"results":"56","hashOfConfig":"36"},{"size":384,"mtime":1653069276000,"results":"57","hashOfConfig":"36"},{"size":0,"mtime":1653066864000,"results":"58","hashOfConfig":"36"},{"size":0,"mtime":1653066870000,"results":"59","hashOfConfig":"36"},{"size":0,"mtime":1653066876000,"results":"60","hashOfConfig":"36"},{"size":0,"mtime":1653066883000,"results":"61","hashOfConfig":"36"},{"size":201,"mtime":1653068439000,"results":"62","hashOfConfig":"36"},{"size":563,"mtime":1653070672000,"results":"63","hashOfConfig":"36"},{"size":150,"mtime":1653070472000,"results":"64","hashOfConfig":"36"},{"size":790,"mtime":1653224270000,"results":"65","hashOfConfig":"36"},{"size":582,"mtime":1653225212000,"results":"66","hashOfConfig":"36"},{"size":1627,"mtime":1653225760000,"results":"67","hashOfConfig":"36"},{"size":657,"mtime":1653228331000,"results":"68","hashOfConfig":"36"},{"size":627,"mtime":1654073583000,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qdhqjt",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"140"},"/Volumes/SSD/Boilerplate/boilerplate/.eslintrc.js",[],"/Volumes/SSD/Boilerplate/boilerplate/App.tsx",[],"/Volumes/SSD/Boilerplate/boilerplate/__tests__/App-test.tsx",[],"/Volumes/SSD/Boilerplate/boilerplate/babel.config.js",[],"/Volumes/SSD/Boilerplate/boilerplate/index.js",[],"/Volumes/SSD/Boilerplate/boilerplate/metro.config.js",[],"/Volumes/SSD/Boilerplate/boilerplate/react-native.config.js",[],"/Volumes/SSD/Boilerplate/boilerplate/src/components/Button/ButtonExample.tsx",[],"/Volumes/SSD/Boilerplate/boilerplate/src/components/Button/ButtonExampleStyles.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/navigations/AppNavigator.tsx",["141"],"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport type { StackNavigationOptions } from \"@react-navigation/stack\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport type { RootStackParamList } from \"types/NavigatorTypes\";\nimport { navigationRef } from \"utils/NavigationService\";\nimport MainNavigator from \"./MainNavigator\";\n\nconst App = createStackNavigator<RootStackParamList>();\n\nconst options: StackNavigationOptions = {\n  headerTintColor: \"#65b6e5\",\n  headerBackTitleVisible: false,\n  headerTitleAlign: \"center\",\n  headerTitleStyle: {\n    //fontFamily: \"Poppins-Regular\",\n    fontWeight: \"bold\",\n    fontSize: 14,\n    color: \"#4a4a4a\",\n  },\n  // headerStyle: {\n  //   shadowColor: '#000',\n  //   shadowOffset: {\n  //     width: 0,\n  //     height: 3,\n  //   },\n  //   shadowOpacity: 0.27,\n  //   shadowRadius: 4.65,\n\n  //   elevation: 6,\n  // },\n  // headerLeft: () => (\n  //   <TouchableOpacity\n  //     onPress={NavigationService.back}\n  //     style={{\n  //       paddingVertical: scaledVertical(15),\n  //       paddingRight: scaledHorizontal(20),\n  //     }}>\n  //     <Image\n  //       source={icon.backIcon}\n  //       style={{\n  //         height: scaledVertical(36),\n  //         width: scaledHorizontal(36),\n  //         marginLeft: scaledHorizontal(10),\n  //       }}\n  //     />\n  //   </TouchableOpacity>\n  // ),\n  // headerBackImage: () => (\n\n  // ),\n  //cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\n};\n// const transparentModalOptions: StackNavigationOptions = {\n//   presentation: \"transparentModal\",\n//   headerShown: false,\n//   cardStyle: { backgroundColor: \"transparent\" },\n//   cardOverlayEnabled: true,\n//   cardStyleInterpolator: ({ current: { progress } }) => ({\n//     cardStyle: {\n//       opacity: progress.interpolate({\n//         inputRange: [0, 0.5, 0.9, 1],\n//         outputRange: [0, 0.25, 0.7, 1],\n//       }),\n//     },\n//     overlayStyle: {\n//       opacity: progress.interpolate({\n//         inputRange: [0, 1],\n//         outputRange: [0, 0.5],\n//         extrapolate: \"clamp\",\n//       }),\n//     },\n//   }),\n// };\n\n// const halfModalOptions: StackNavigationOptions = {\n//   cardStyle: { backgroundColor: \"transparent\" },\n//   cardOverlayEnabled: true,\n//   presentation: \"transparentModal\",\n//   cardStyleInterpolator: ({ current: { progress } }) => ({\n//     cardStyle: {\n//       opacity: progress.interpolate({\n//         inputRange: [0, 0.75, 1],\n//         outputRange: [0, 0.5, 1],\n//       }),\n//     },\n//     overlayStyle: {\n//       opacity: progress.interpolate({\n//         inputRange: [0, 1],\n//         outputRange: [0, 0.5],\n//         extrapolate: \"clamp\",\n//       }),\n//     },\n//   }),\n// };\n\n// const halfModalBottomOptions: StackNavigationOptions = {\n//   cardStyle: { backgroundColor: \"transparent\" },\n//   presentation: \"transparentModal\",\n//   headerShown: false,\n//   cardOverlayEnabled: true,\n//   cardStyleInterpolator: ({ current: { progress } }) => ({\n//     cardStyle: {\n//       opacity: progress.interpolate({\n//         inputRange: [0, 0.75, 1],\n//         outputRange: [0, 0.5, 1],\n//       }),\n//     },\n//     overlayStyle: {\n//       opacity: progress.interpolate({\n//         inputRange: [0, 1],\n//         outputRange: [0, 0.5],\n//         extrapolate: \"clamp\",\n//       }),\n//     },\n//   }),\n// };\n\nconst AppNavigator = () => {\n  return (\n    <NavigationContainer ref={navigationRef}>\n      <App.Navigator screenOptions={options}>\n        <App.Screen\n          name=\"MainNavigator\"\n          component={MainNavigator}\n          options={{ headerShown: false }}\n        />\n      </App.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;\n","/Volumes/SSD/Boilerplate/boilerplate/src/navigations/MainNavigator.tsx",[],"/Volumes/SSD/Boilerplate/boilerplate/src/screens/LoginScreen/LoginScreen.tsx",["142","143"],"import ButtonExample from \"components/Button/ButtonExample\";\nimport * as React from \"react\";\nimport { Text, View } from \"react-native\";\nimport NavigationService from \"utils/NavigationService\";\nimport Config from \"react-native-config\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport moment from \"moment\";\n\nimport { useTestData } from \"../../hooks\";\nimport { getDataTest } from \"../../store/user/actions\";\n\nimport styles from \"./LoginScreenStyles\";\nimport \"../../i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nconst LoginScreen = () => {\n  const testData = useTestData();\n  const dispatch: any = useDispatch();\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    dispatch(getDataTest());\n  }, [dispatch]);\n\n  // const changeLanguage = (lng: string) => {\n  //   i18n.changeLanguage(lng);\n  // };\n  return (\n    <View style={styles.container}>\n      <Text>LoginScreen</Text>\n      <ButtonExample\n        title=\"Testing Button\"\n        onPress={() => NavigationService.navigate(\"RegisterScreen\")}\n      />\n      <ButtonExample\n        title=\"Change language\"\n        onPress={() => {\n          i18n.changeLanguage(\"id\");\n          console.log(\"Heloooo\");\n        }}\n      />\n      <Text>Status : {Config.STATUS}</Text>\n\n      <Text>Today : {moment().format(\"MMMM Do YYYY, h:mm:ss a\")}</Text>\n      <Text>From branch master</Text>\n      <Text>Translation : {i18n.t(\"home\")}</Text>\n\n      <Text>Data Test </Text>\n      <Text>CODE : {testData.data?.bpi.EUR.code}</Text>\n      <Text>Rate : {testData.data?.bpi.EUR.rate}</Text>\n      <Text />\n      <Text>Data Test </Text>\n      <Text>CODE : {testData.data?.bpi.GBP.code}</Text>\n      <Text>Rate : {testData.data?.bpi.GBP.rate}</Text>\n      <Text>Disclaimer : {testData.data?.disclaimer}</Text>\n    </View>\n  );\n};\n\nexport default LoginScreen;\n","/Volumes/SSD/Boilerplate/boilerplate/src/screens/LoginScreen/LoginScreenStyles.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/screens/RegisterScreen/RegisterScreen.tsx",[],"/Volumes/SSD/Boilerplate/boilerplate/src/screens/RegisterScreen/RegisterScreenStyles.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/types/NavigatorTypes.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/utils/NavigationService.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/store/index.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/store/user/actions.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/store/user/reducers.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/store/user/types.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/configs/api.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/configs/colors.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/configs/fonts.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/configs/icons.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/configs/images.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/hooks/index.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/types/TestTypes.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/utils/Dispatch.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/utils/AsyncStorageService.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/utils/validations/ValidationDictionary.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/utils/validations/ValidationService.ts",[],"/Volumes/SSD/Boilerplate/boilerplate/src/assets/skeleton/ExampleSkeleton.tsx",[],"/Volumes/SSD/Boilerplate/boilerplate/src/i18n/index.ts",["144"],"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport id from \"./language/id.json\";\nimport en from \"./language/en.json\";\n\n//empty for now\nconst resources = {\n  id: {\n    translation: id,\n  },\n  en: {\n    translation: en,\n  },\n};\n\nexport const changeLanguage = (translation: string) => {\n  i18n.language = translation;\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  compatibilityJSON: \"v3\",\n  //language to use if translations in user language are not available\n  fallbackLng: [\"en\", \"id\"],\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n});\n\nexport default i18n;\n",{"ruleId":"145","severity":2,"message":"146","line":6,"column":1,"nodeType":"147","endLine":6,"endColumn":57,"fix":"148"},{"ruleId":"145","severity":2,"message":"146","line":13,"column":1,"nodeType":"147","endLine":13,"endColumn":42,"fix":"149"},{"ruleId":"145","severity":2,"message":"150","line":15,"column":1,"nodeType":"147","endLine":15,"endColumn":48,"fix":"151"},{"ruleId":"145","severity":2,"message":"146","line":2,"column":1,"nodeType":"147","endLine":2,"endColumn":50,"fix":"152"},"import/order","There should be at least one empty line between import groups","ImportDeclaration",{"range":"153","text":"154"},{"range":"155","text":"154"},"`react-i18next` import should occur before import of `../../hooks`",{"range":"156","text":"157"},{"range":"158","text":"154"},[346,346],"\n",[484,484],[343,554],"import { useTranslation } from \"react-i18next\";\nimport { useTestData } from \"../../hooks\";\nimport { getDataTest } from \"../../store/user/actions\";\n\nimport styles from \"./LoginScreenStyles\";\nimport \"../../i18n\";\n",[77,77]]